[user]
	name = Sergiy Tupchiy
	email = stupchiy@gmail.com
[alias]
	# Switch profiles
	homeprofile = config user.email \"stupchiy@gmail.com\"
	workprofile = config user.email \"profile@work.work\"

	# Print that aliases list
	aliases = "!git config -l | grep alias | cut -c 7-"

	# Human readable

	# Amend the currently staged files to the latest commit
	amend = commit --amend --reuse-message=HEAD

	assumed = "!git ls-files -v | grep ^h | cut -c 3-"
	back = checkout "-"
	branches = branch -a
	branchout = checkout -b

	# List contributors with number of commits
	contributors = shortlog --summary --numbered

	discard = checkout --
	filetrail = git log --follow -p -w
	graph = log --graph -10 --branches --remotes --tags  --format=format:'%Cgreen%h %Creset• %<(75,trunc)%s (%cN, %ar) %Cred%d' --date-order
	history = log -10 --format=format:'%Cgreen%h %Creset• %s (%cN, %ar)'
	invert = revert
	last = log -1 HEAD --format=format:"%Cred%H"
	lasttag = describe --tags --abbrev=0
	mergetrail = log --ancestry-path --merges
	move = mv
	nevermind = !git reset --hard HEAD && git clean -d -f
	precommit = diff --cached -w --word-diff=color --word-diff-regex='[^[:space:]<>]+'
	prestage = diff -w --word-diff=color
	remotes = remote -v
	remove = rm
	resave = commit --amend
	rewrite = rebase -i
	save = commit -m
	stashes = stash list
	summary = status -u -s
	tags = tag -l
	uncommit = reset --mixed HEAD~
	unmerged = branch --no-merged
	unmerged = diff --name-only --diff-filter=U
	unstage = reset -q HEAD --
	unstash = stash pop
	untrack = rm -r --cached
	what = show -w

	# Shortcuts
	cb = !git checkout master && git branch | grep -v "master" | xargs git branch -D && git pp
	st = status -sb
	ls = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate
	ll = log --pretty=format:"%C(yellow)%h%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --numstat
	lnc = log --pretty=format:"%h\\ %s\\ [%cn]"
	lds = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=short
	ld = log --pretty=format:"%C(yellow)%h\\ %ad%Cred%d\\ %Creset%s%Cblue\\ [%cn]" --decorate --date=relative
	le = log --oneline --decorate
	fl = log -u
	dl = "!git ll -1"
	dlc = diff --cached HEAD^
	dr  = "!f() { git diff "$1"^.."$1"; }; f"
	lc  = "!f() { git ll "$1"^.."$1"; }; f"
	diffr  = "!f() { git diff "$1"^.."$1"; }; f"
	f = "!git ls-files | grep -i"
	grep = grep -Ii
	pp = pull -p
	gra = "!f() { A=$(pwd) && TOPLEVEL=$(git rev-parse --show-toplevel) && cd $TOPLEVEL && git grep --full-name -In $1 | xargs -I{} echo $TOPLEVEL/{} && cd $A; }; f"

[color]
	branch = auto
	diff = auto
	interactive = auto
	pager = true
	status = auto
	ui = true

[color "status"]
	added = blue reverse
	changed = green
	untracked = red

[push]
	default = simple

[core]
	# Use custom `.gitignore` and `.gitattributes`
	excludesfile = ~/.gitignore
	attributesfile = ~/.gitattributes

	# Treat spaces before tabs and all kinds of trailing whitespace as an error
	# [default] trailing-space: looks for spaces at the end of a line
	# [default] space-before-tab: looks for spaces before tabs at the beginning of a line
	whitespace = space-before-tab,-indent-with-non-tab,trailing-space

	# Make `git rebase` safer on OS X
	# More info: <http://www.git-tower.com/blog/make-git-rebase-safe-on-osx/>
	trustctime = false

	# Prevent showing files whose names contain non-ASCII symbols as unversioned.
	# http://michael-kuehnel.de/git/2014/11/21/git-mac-osx-and-german-umlaute.html
	precomposeunicode = false

[credential]
	helper = osxkeychain

[help]
	# Automatically correct and execute mistyped commands
	autocorrect = 1

[filter "media"]
	required = true
	clean = git media clean %f
	smudge = git media smudge %f

[filter "hawser"]
	clean = git hawser clean %f
	smudge = git hawser smudge %f
	required = true
